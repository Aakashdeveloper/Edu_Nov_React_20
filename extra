3 application react
1 react hooks
1 react login logout
1 react redux

///////////////
1 redux
1 react graphql
Testing
///////////
Basic React Native
Deployment> Heroku/Docker/Nginx/
Github
CI/CD with AWS (git to aws)
1 React Saga




https://nodejs.org/en/
https://code.visualstudio.com/
https://git-scm.com/downloads
https://github.com/Aakashdeveloper
https://github.com/Aakashdeveloper/Edu_Nov_React_20
https://www.codecademy.com/learn/introduction-to-javascript

//////////////
JavaScript
Html
css
Bootstrap

//////////////////////////
React
////////////////
React is frontend framework that help to build single page application
using component based structure

//////////
npm> node package manager
node_modules/dependency/packages

JSON
> JavaScript Object Notation
[
    {
        name:"John",
        class:"UI"
    },
    {
        name:"John",
        class:"UI",
        rollno:1
    }
]

//////
Package.json
> Entry Point to the application
> Meta Data (description,version,lin,name,author)
> Scripts  (test,run ,build)
> Packages (dependency,versions)

node -v

//////////////////////////
Step to generate package.json
////////////////////////////////
**NodeJs must be there in my system
> Open terminal/cmd and navigate to the folder
> npm init 
> Answer all questions
> type "yes"

//////////////////////////
Step to install packages
////////////////////////////////
**NodeJs must be there in my system
> Open terminal/cmd and navigate to the folder
> npm i packagename / npm install packagename /npm i packagename --save


local
> local to folder
> use in one particular folder
> max dependency will be local

global
> local to the system
> use for any application
> mainly use for generation application
> need admin permission
> will not add in package.json 


//////////////////////////
Step to install Global packages
////////////////////////////////
**NodeJs must be there in my system

#window
> open cmd as admin
> npm i -g packagename

#mac/linux
> Open terminal
> sudo npm i -g packagename

//////////////////////////
Step to Generate React App
////////////////////////////////
#window
>>>Only One Time in new system<<<<<
> open cmd as admin
> npm i -g create-react-app 

>>Next Every time you want new app<<<<<
> open cmd
> go inside folder
> create-react-app appname


#window
>>>Only One Time in new system<<<<<
> open terminal
> sudo npm i -g create-react-app 

>>Next Every time you want new app<<<<<
> open terminal
> go inside folder
> create-react-app appname

//////////////////////////
Step to Run the app
////////////////////////////////
> go inside app using cmd/terminal
> npm start
> http://localhost:3000


/////JavaScript////
Map
Filter
Indexof

////////////Component///////
Functional
> dumb component
> display purpose
> light in weight

ClassComponent
> logical Component
> can be use for display as well as Logic/data/apicall
> heavy as compare to Functional

Hooks Component

/////////
State & Props 

State > 
# act like a local variable
# any data interaction will happen through state Only
# State value can be update
# State are defined in class Component

Props >
# Help to transfer data from one component to other component
# We can pass data from parent to child and child to parent
# we cannot directly update props value 


///////
react routing
passing params in url
fetch vs axios


from parent to child  > simple props
from child to parent  > props with callback function


/////Second App///////
npm i react-router-dom axios react-tabs

(get) hotels> https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity > https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails > https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip> https://developerfunnel.herokuapp.com/hotellist/1
https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname> https://developerfunnel.herokuapp.com/location
(get)  rooms => https://developerfunnel.herokuapp.com/rooms
(get)  triptype> https://developerfunnel.herokuapp.com/booking
(get)  bookingdetails > https://developerfunnel.herokuapp.com/allBooking
(post) placebooking >  https://developerfunnel.herokuapp.com/placeBook

https://developerhotel.herokuapp.com/

var age = 10
var b = "My age is "+age
"My age is 10"

var b = `My age is ${age}`
"My age is 10"


>>>>>> withRouter

Math.floor(Math.random()*10000)


Math.floor(Math.random()*(max-min))+min

Math.floor(Math.random()*(10-1))+1


params> this props.match.params
queryparams > this.location.search
redirect => this.history.push

////////
redux
///////

redux help to optimize the code
state managmenet
passing data to non nested component


>>>>>Hooks<<<<<<
usestate
useeffect


>>>>>Redux1<<<<<
>>>>LoginLogout with React and JWT<<<<<<<


var
let
const

var a = 10
var a declare
a = 10 assignment


var redeclare and reassign
let we cannot redeclare but can reassign
const we cannot redeclare nor reassign

> var a = 10
undefined
> a
10
> var a = 11
undefined
> a
11
> a = 11
11
> let b = 10
undefined
> b
10
> let b = 11
Uncaught SyntaxError: Identifier 'b' has already been declared
> b =11
11
> const c = 10
undefined
> c
10
> const c = 11
Uncaught SyntaxError: Identifier 'c' has already been declared
> c = 11
Uncaught TypeError: Assignment to constant variable.
////////////////////////

npm i redux react-redux redux-logger prop-types 

prop-types :> when we call action we need to dispatch 


https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/
https://www.youtube.com/c/DeveloperFunnel/videos

//////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}